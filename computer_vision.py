# -*- coding: utf-8 -*-
"""computer vision

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16e-e0B0IxVwEPtBtvavU3F_3rP8Gjxns
"""

from IPython import get_ipython
from IPython.display import display
import cv2
import numpy as np
from google.colab.patches import cv2_imshow
kernel = np.ones((5,5),np.uint8)
print(kernel)
path = "/content/cv1.jpg"
img =cv2.imread(path)
imgGray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
cv2_imshow(imgGray)

from IPython import get_ipython
from IPython.display import display
import cv2
import numpy as np
from google.colab.patches import cv2_imshow
kernel = np.ones((5,5),np.uint8)
print(kernel)
path = "/content/cv1.jpg"
img =cv2.imread(path)
imgGray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
imgBlur = cv2.GaussianBlur(imgGray,(7,7),0)
cv2_imshow(imgBlur)

from IPython import get_ipython
from IPython.display import display
import cv2
import numpy as np
from google.colab.patches import cv2_imshow
kernel = np.ones((5,5),np.uint8)
print(kernel)
path = "/content/cv1.jpg"
img =cv2.imread(path)
imgGray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
imgBlur = cv2.GaussianBlur(imgGray,(7,7),0)
imgCanny = cv2.Canny(imgBlur,100,200)
cv2_imshow(imgCanny)

from IPython import get_ipython
from IPython.display import display
import cv2
import numpy as np
from google.colab.patches import cv2_imshow
kernel = np.ones((5,5),np.uint8)
print(kernel)
path = "/content/cv1.jpg"
img =cv2.imread(path)
imgGray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
imgBlur = cv2.GaussianBlur(imgGray,(7,7),0)
imgCanny = cv2.Canny(imgBlur,100,200)
imgDilation = cv2.dilate(imgCanny,kernel , iterations = 10)
imgEroded = cv2.erode(imgDilation,kernel,iterations=2)
cv2_imshow(imgEroded)

from IPython import get_ipython
from IPython.display import display
import cv2
import numpy as np
from google.colab.patches import cv2_imshow   # Correct import

kernel = np.ones((5,5),np.uint8)
print(kernel)
cap = cv2.VideoCapture("/content/cv1.jpg")
if (cap.isOpened()== False):
    print("Error opening video file")
while(cap.isOpened()):
    ret, frame = cap.read()
    if ret == True:
        cv2_imshow(frame)  # Use cv2_imshow instead of cv2.imshow
        if cv2.waitKey(250) & 0xFF == ord('q'):
            break
    else:
        break
cap.release()
cv2.destroyAllWindows()

from IPython import get_ipython
from IPython.display import display
import cv2
import numpy as np
from google.colab.patches import cv2_imshow   # Correct import

kernel = np.ones((5,5),np.uint8)
print(kernel)
img = cv2.imread("/content/cv1.jpg",cv2.IMREAD_COLOR)
img = cv2.resize(img,(300,300))
cv2_imshow(img)
cv2.waitKey(0)

from IPython import get_ipython
from IPython.display import display
import cv2
import numpy as np
from google.colab.patches import cv2_imshow   # Correct import
kernel = np.ones((5,5),np.uint8)
print(kernel)
path = r"/content/cv1.jpg"
src = cv2.imread(path)
window_name = 'Image'
image = cv2.rotate(src, cv2.ROTATE_180)
cv2_imshow(image)